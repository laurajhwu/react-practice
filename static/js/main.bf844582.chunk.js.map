{"version":3,"sources":["Header/navbar.js","Header/index.js","MainContent/samplePost.js","MainContent/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","href","link","title","Header","id","src","alt","className","showMenu","onClick","exitMenu","navigation","map","navbar","toggleMenu","samplePost","caption","MainContent","changeMessage","newMessage","assignId","PostData","slice","post","image","toggleHiddenPosts","displayHiddenPost","App","state","lastId","getNewId","arr","item","toggleState","prop","setState","prevState","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf844582.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Navbar = props =>\n    <li>\n        <a href={props.link}>{props.title}</a>\n    </li>\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired\n}\n\nexport default Navbar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Navbar from './navbar'\n\nconst Header = props =>\n    <header>\n        <nav>\n            <div id=\"website-title\">\n                <img src=\"images/logo.png\" alt=\"logo\" id=\"logo\" />\n                <h1>NIGHTGRAM</h1>\n            </div>\n\n            <ul className={props.showMenu ? \"main-nav show-menu\" : \"main-nav\"} >\n                <button className=\"exit-btn\" onClick={props.exitMenu}>X</button>\n                {props.navigation.map(navbar => {\n                    return (\n                        <Navbar\n                            title={navbar.title}\n                            link={navbar.link}\n                            key={navbar.id} />\n                    )\n                })}\n            </ul>\n            <img src=\"images/hamburger.png\" id=\"hamburger\" alt=\"hamburger\" onClick={props.toggleMenu} />\n        </nav>\n    </header>\n\nHeader.propTypes = {\n    navigation: PropTypes.array.isRequired,\n    exitMenu: PropTypes.func.isRequired,\n    showMenu: PropTypes.bool.isRequired,\n    toggleMenu: PropTypes.func.isRequired\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst samplePost = props =>\n\n    <figure className=\"post\">\n        <img src={props.src} alt={props.alt} />\n        <figcaption>{props.caption}</figcaption>\n    </figure>\n\nsamplePost.propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    caption: PropTypes.string.isRequired\n}\n\nexport default samplePost;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SamplePost from './samplePost'\nimport PostData from '../data/postData.json'\n\nconst MainContent = props =>\n    <main>\n        <section className=\"intro\">\n            <h2 onClick={props.changeMessage}>\n                {props.newMessage ? props.newMessage : \"Welcome to NightGram!\"}\n            </h2>\n            <h3>A place to share your night life</h3>\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ratione laboriosam maiores illum ex veritatis\n            labore\n            sequi distinctio minus cumque, possimus quos repudiandae adipisci aliquam, voluptatibus vitae dolor,\n            itaque\n            ipsam nemo. Lorem ipsum, dolor sit amet consectetur adipisicing elit. Laudantium rem unde ut rerum eos,\n            ex\n        hic in culpa non numquam tempora ullam ducimus quas distinctio at officiis magni. Dolorem, officiis.</p>\n        </section>\n\n        <div className=\"container\">\n            <h3>The Night is Still Young!</h3>\n            <section className=\"sample\">\n\n                {/* only display 4 visible posts */}\n                {props.assignId(PostData.slice(0, 4))\n                    .map(post =>\n                        <SamplePost\n                            key={post.id}\n                            src={post.image}\n                            alt={post.alt}\n                            caption={post.caption} />\n                    )\n                }\n\n            </section>\n\n            <div className=\"see-more\">\n                <button className=\"more-btn\" onClick={props.toggleHiddenPosts}>\n                    {props.displayHiddenPost ? \"Show Less\" : \"Show More\"}\n                </button>\n                <div className=\"style-arrow\" onClick={props.toggleHiddenPosts}>></div>\n            </div>\n\n            <section\n                className={props.displayHiddenPost ? \"sample\" : \"sample no-display\"}\n                id=\"hidden-sample\" >\n\n                {props.assignId(PostData.slice(4))\n                    .map(post =>\n                        <SamplePost\n                            key={post.id}\n                            src={post.image}\n                            alt={post.alt}\n                            caption={post.caption} />\n                    )\n                }\n\n            </section>\n\n\n            <footer className=\"action\">\n                <button>Post Now!</button>\n            </footer>\n        </div>\n    </main>\n\nMainContent.propTypes = {\n    assignId: PropTypes.func.isRequired,\n    changeMessage: PropTypes.func.isRequired,\n    newMessage: PropTypes.string.isRequired,\n    toggleHiddenPosts: PropTypes.func.isRequired,\n    displayHiddenPost: PropTypes.bool.isRequired,\n}\n\nexport default MainContent;","import React from 'react';\nimport './App.css';\nimport Header from './Header'\nimport MainContent from './MainContent'\n\nclass App extends React.Component {\n\n  state = {\n    newMessage: '',\n    showMenu: false,\n    displayHiddenPost: false,\n    navigation: [\n      {\n        title: \"Home\",\n        link: \"#\"\n      },\n      {\n        title: \"About\",\n        link: \"#\"\n      },\n      {\n        title: \"Getting Started\",\n        link: \"#\"\n      },\n      {\n        title: \"Contact\",\n        link: \"#\"\n      }\n    ]\n  }\n\n  //A method that takes an array of objects and assigns each item a unique ID\n  lastId = 0;\n  getNewId = () => {\n    const id = this.lastId;\n    this.lastId++;\n    return id;\n  }\n\n  assignId = (arr) => arr.map(item => {\n    const id = this.getNewId();\n    return ({ ...item, id });\n  })\n\n  //a function to toggle the value of a state\n  toggleState = (prop) => this.setState(prevState => ({ [prop]: !prevState[prop] }));\n\n  //change the 'Welcome to NightGram!' to 'Have a Good Time!' when clicked\n  changeMessage = () => this.setState({ newMessage: \"Have a Good Time!\" });\n\n  //toggle menu when clicking on hamburger\n  toggleMenu = () => this.toggleState(\"showMenu\");\n  //exit menu when clicking the exit button\n  exitMenu = () => this.setState(({ showMenu: false }));\n\n  //toggle the display of hidden posts\n  toggleHiddenPosts = () => this.toggleState(\"displayHiddenPost\")\n\n  render() {\n\n    return (\n      <div className=\"App\" >\n\n        <Header\n          navigation={this.state.navigation}\n          toggleMenu={this.toggleMenu}\n          showMenu={this.state.showMenu}\n          exitMenu={this.exitMenu} />\n\n        <MainContent\n          assignId={this.assignId}\n          changeMessage={this.changeMessage}\n          newMessage={this.state.newMessage}\n          toggleHiddenPosts={this.toggleHiddenPosts}\n          displayHiddenPost={this.state.displayHiddenPost} />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}